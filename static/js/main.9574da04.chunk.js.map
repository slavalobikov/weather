{"version":3,"sources":["API/api.js","Redux/reducers/ForecastReducer.js","Components/InputCity/InputCity.jsx","img/preloader.svg","Components/preloader/Preloader.jsx","img/cloudy-day.svg","img/day.svg","img/snowy.svg","img/rainy.svg","Components/ButtonComponent/MoreInfo/MoreInfo.jsx","Redux/reducers/ForecastWeekReducer.js","Components/Loader/Loader.jsx","Components/ButtonComponent/WeekIfo/InfoWeatherCard/InfoWeatherCard.js","Components/ButtonComponent/WeekIfo/WeekInfo.jsx","Components/ButtonComponent/WeekIfo/WeekInfoContainer.js","Components/ButtonComponent/ButtonComponents.jsx","Components/WeatherCity/WeatherCity.jsx","Components/ErrorMessage/ErrorMessage.jsx","Components/AppWithLocalStorage/AppWithLoclStorage.jsx","App.js","Redux/Redux.js","index.js","Components/ButtonComponent/WeekIfo/WeekInfo.module.css","Components/ButtonComponent/MoreInfo/MoreInfo.module.css","App.module.css","Components/WeatherCity/WeatherCity.module.css","Components/InputCity/InputCity.module.css","Components/ButtonComponent/WeekIfo/InfoWeatherCard/InfoWeatherCard.module.css","Components/ButtonComponent/ButtonComponent.module.css","Components/Loader/Loader.module.css","Components/ErrorMessage/ErrorMessage.module.css","Components/preloader/Preloader.module.css"],"names":["instance","axios","baseURL","weatherApi","city","get","then","res","data","list","SET_WEATHER","IS_FEATCHING","IS_ERROR","initialState","isFetching","weather","isError","IsFetching","type","IsError","error","ForecastReducer","state","action","Search","Input","InputCity","props","useState","isInput","setInput","className","s","inputik","onClick","search","autoFocus","loading","placeholder","onSearch","value","SetWeatherThunk","enterButton","Preloader","preloader","src","alt","MoreInfo","modal","ReactDOM","createPortal","flex","modalWindow","center","name","sys","country","main","temp_max","temp_min","wind","speed","coord","lon","lat","visibility","btn","setMore","size","document","getElementById","SET_WEATHER_WEEK","IS_FEATCHING_WEEK","TODAY","SET_TOMORROW","SET_TOMORROW_TOMORROW","weatherWeek","today","tomorrow","tomorrowTomorrow","IsFeatchingWeek","ForecastWeekReducer","Today","arrWithoutToday","forEach","el","Date","dt_txt","getDate","push","Loader","wrapper","lds_ellipsis","InfoWeatherCard","container","time","weatherImgAndTemp","weatherImgChoose","cloudy","clear","snowy","rainy","temp","Math","round","description","feels_like","WeekInfo","setWeek","classNames","modalPreloader","btnCon","todayInfo","map","getHours","dt","WeekInfoContainer","this","SetWeatherWeekThunk","console","log","React","PureComponent","connect","dispatch","a","response","ButtonComponents","more","week","btnleft","WeatherCity","temperatura","desc","ErrorMessage","Icon","WarningOutlined","AppWithLoclStorage","localStorage","getItem","app","wrap","status","Component","compose","setItem","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","render","App","module","exports"],"mappings":"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","file":"static/js/main.9574da04.chunk.js","sourcesContent":["import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL:\"https://api.openweathermap.org/data/2.5/\"\r\n})\r\n//appid=b81543affaecbb62ec96a57263178ff4\r\nexport const weatherApi = {\r\n    byCityName(city){\r\n        return instance.get(`weather?q=${city}&units=metric&lang=ru&appid=b81543affaecbb62ec96a57263178ff4`)\r\n    },\r\n    forWeek(city){\r\n        return instance.get(`forecast?q=${city}&lang=ru&units=metric&appid=b81543affaecbb62ec96a57263178ff4`)\r\n            .then( res => res.data.list )\r\n    }\r\n}","import {weatherApi} from \"../../API/api\";\r\n\r\nconst SET_WEATHER = 'forecast/SET_WEATHER';\r\nconst IS_FEATCHING = 'forecast/IS_FEATCHING';\r\nconst IS_ERROR = 'forecast/IS_ERROR'\r\n\r\nlet initialState = {\r\n    isFetching: null,\r\n    weather: [],\r\n    isError: null,\r\n}\r\n\r\nconst ForecastReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_WEATHER: {\r\n            return {\r\n                ...state,\r\n                weather: action.weather\r\n            }\r\n        }\r\n        case IS_FEATCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case IS_ERROR: {\r\n            return {\r\n                ...state,\r\n                isError: action.error\r\n            }\r\n        }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst SetWeather = (weather) => ({type: SET_WEATHER, weather})\r\nconst IsFetching = (isFetching) => ({type: IS_FEATCHING, isFetching})\r\nconst IsError = (error) => ({type: IS_ERROR, error})\r\n\r\nexport const SetWeatherThunk = (city) => async (dispatch) => {\r\n    try {\r\n        dispatch(IsFetching(true))\r\n        let response = await weatherApi.byCityName(city)\r\n        if (response.status === 200) {\r\n            dispatch(IsError(false))\r\n            dispatch(SetWeather(response))\r\n            localStorage.setItem('weatherslavalobikov', response.data.name)\r\n        }\r\n        dispatch(IsFetching(false))\r\n    } catch (err) {\r\n        dispatch(IsError(true))\r\n        dispatch(IsFetching(false))\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default ForecastReducer;","import React, {useState} from 'react';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport s from './InputCity.module.css'\r\n\r\nimport { Input } from 'antd';\r\nconst { Search } = Input;\r\n\r\nconst InputCity = (props) => {\r\n\r\n    const [isInput, setInput] = useState(false);\r\n\r\n\r\n    const onSearch = value => {\r\n        if (value === '') {\r\n            return\r\n        }\r\n        props.SetWeatherThunk(value)\r\n        setInput(false)\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {!isInput && <span className={s.inputik} onClick={() => setInput(true)} >{!!props.isFetching &&\r\n            <span>Загрузка...</span>}\r\n                {!props.isFetching && <span className={s.city}>Введите город</span>}\r\n            </span>}\r\n\r\n            {!!isInput && <div className={s.Input}>\r\n                <Search className={s.search} autoFocus={true}\r\n                        loading={!!props.isFetching}\r\n                        placeholder=\"Введите город\"\r\n                        onSearch={onSearch} enterButton />\r\n            </div>\r\n\r\n            }\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InputCity;","export default __webpack_public_path__ + \"static/media/preloader.709ad798.svg\";","import React from 'react';\r\nimport preloader from './../../img/preloader.svg'\r\nimport s from './Preloader.module.css';\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className={s.preloader}>\r\n            <img src={preloader} alt=\"preloader\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","export default __webpack_public_path__ + \"static/media/cloudy-day.7fb7ecfc.svg\";","export default __webpack_public_path__ + \"static/media/day.c33ef664.svg\";","export default __webpack_public_path__ + \"static/media/snowy.dce3f5e7.svg\";","export default __webpack_public_path__ + \"static/media/rainy.130d6250.svg\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Button} from \"antd\";\r\n\r\n\r\nimport s from './MoreInfo.module.css';\r\n\r\n\r\nconst MoreInfo = (props) => {\r\n\r\n    return (\r\n        <div className={s.modal}>\r\n            {ReactDOM.createPortal(\r\n                <div className={s.modal}>\r\n                    <div className={s.flex}>\r\n                        <div className={s.modalWindow}>\r\n                            Подробнее о погоде:\r\n\r\n                            <div className={s.center}>\r\n                                <div className={s.name}> {props.weather.data.name}, {props.weather.data.sys.country}</div>\r\n                                <div>Максимальная температура: {props.weather.data.main.temp_max} °C</div>\r\n                                <div><hr/></div>\r\n                                <div>Минимальная температура: {props.weather.data.main.temp_min} °C</div>\r\n                                <div><hr/></div>\r\n                                <div>Скорость ветра: {props.weather.data.wind.speed} км/час</div>\r\n                                <div><hr/></div>\r\n                                <div>Широта: {props.weather.data.coord.lon}</div>\r\n                                <div><hr/></div>\r\n                                <div>Долгота: {props.weather.data.coord.lat}</div>\r\n                                <div><hr/></div>\r\n                                <div>Видимость: {props.weather.data.visibility}</div>\r\n                                <Button className={s.btn}  onClick={() => props.setMore(false)} type=\"primary\" size={'large'}>\r\n                                    Назад\r\n                                </Button>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>,\r\n                document.getElementById('modalMore')\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MoreInfo;","import {weatherApi} from \"../../API/api\";\r\n\r\nconst SET_WEATHER_WEEK = 'forecast-week/SET_WEATHER_WEEK';\r\nconst IS_FEATCHING_WEEK = 'forecast-week/IS_FEATCHING_WEEK';\r\nconst TODAY = 'forecast-week/TODAY';\r\nconst SET_TOMORROW = 'forecast-week/SET_TOMORROW';\r\nconst SET_TOMORROW_TOMORROW = 'forecast-week/SET_TOMORROW_TOMORROW';\r\n\r\n\r\n\r\nlet initialState = {\r\n    weatherWeek:[],\r\n    today:[],\r\n    tomorrow:[],\r\n    tomorrowTomorrow:[],\r\n    isFetching:null,\r\n    error:null,\r\n\r\n}\r\n\r\nconst ForecastWeekReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_WEATHER_WEEK: {\r\n            return {\r\n                ...state,\r\n                weatherWeek:action.weatherWeek\r\n            }\r\n        }\r\n        case IS_FEATCHING_WEEK: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case TODAY: {\r\n            let Today = [];\r\n            let arrWithoutToday = [];\r\n\r\n            action.today.forEach(el => {\r\n                if (new Date(action.today[0].dt_txt).getDate() === new Date(el.dt_txt).getDate()) {\r\n                    Today.push(el)\r\n                } else {\r\n                    arrWithoutToday.push(el)\r\n                }\r\n            })\r\n\r\n            return {\r\n                ...state,\r\n                today: Today\r\n            }\r\n        }\r\n        case SET_TOMORROW: {\r\n            return {\r\n                ...state,\r\n                tomorrow: action.tomorrow\r\n            }\r\n        }\r\n        case SET_TOMORROW_TOMORROW: {\r\n            return {\r\n                ...state,\r\n                tomorrowTomorrow:action.tomorrowTomorrow\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nconst SetWeatherWeek = (weatherWeek) => ({type:SET_WEATHER_WEEK, weatherWeek})\r\nconst IsFeatchingWeek = (isFetching) => ({type:IS_FEATCHING_WEEK, isFetching })\r\nconst SetToday = (today) => ({type:TODAY, today})\r\nconst SetTomorrow = (tomorrow) => ({type: SET_TOMORROW, tomorrow})\r\nconst SetTomorrowTomorrow = (tomorrowTomorrow) => ({type: SET_TOMORROW_TOMORROW, tomorrowTomorrow})\r\n\r\n\r\nexport const SetWeatherWeekThunk = (city) => async (dispatch) => {\r\n    dispatch(IsFeatchingWeek(true))\r\n    let response = await weatherApi.forWeek(city)\r\n    dispatch(SetWeatherWeek(response))\r\n    dispatch(SetToday(response))\r\n\r\n    /*    let Today = [];\r\n    let arrWithoutToday = [];\r\n    let Tomorrow = [];\r\n    let arrWithoutTodayAndTomorrow = [];\r\n    let TomorrowTomorrow = [];\r\n    response.forEach(el => {\r\n        if (new Date(response[0].dt_txt).getDate() === new Date(el.dt_txt).getDate()) {\r\n            Today.push(el)\r\n        } else {\r\n            arrWithoutToday.push(el)\r\n        }\r\n    })\r\n    dispatch(SetToday(Today))\r\n    arrWithoutToday.forEach(el => {\r\n        if (new Date(arrWithoutToday[0].dt_txt).getDate() === new Date(el.dt_txt).getDate()) {\r\n            Tomorrow.push(el)\r\n        }\r\n        else {\r\n            arrWithoutTodayAndTomorrow.push(el)\r\n        }\r\n    })\r\n    dispatch(SetTomorrow(Tomorrow))\r\n    arrWithoutTodayAndTomorrow.forEach(el => {\r\n        if (new Date(arrWithoutTodayAndTomorrow[0].dt_txt).getDate() === new Date(el.dt_txt).getDate()) {\r\n            TomorrowTomorrow.push(el)\r\n        }\r\n    })\r\n    dispatch(SetTomorrowTomorrow(TomorrowTomorrow));*/\r\n\r\n    dispatch(IsFeatchingWeek(false))\r\n}\r\n\r\nexport default ForecastWeekReducer;","import React from 'react';\r\n\r\nimport s from './Loader.module.css';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className = {s.wrapper}>\r\n            <div className = {s.lds_ellipsis}>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;","import React from 'react';\r\nimport s from './InfoWeatherCard.module.css';\r\nimport cloudy from \"../../../../img/cloudy-day.svg\";\r\nimport clear from \"../../../../img/day.svg\";\r\nimport snowy from \"../../../../img/snowy.svg\";\r\nimport rainy from \"../../../../img/rainy.svg\";\r\n\r\nconst InfoWeatherCard = (props) => {\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.center}>\r\n                <div>{props.time}:00</div>\r\n                <div className={s.weatherImgAndTemp}>\r\n                    <div>\r\n                        {(props.weatherImgChoose === \"Clouds\") && <div><img src={cloudy} alt=\"cloudy\"/></div>}\r\n                        {(props.weatherImgChoose === \"Clear\") && <div><img src={clear} alt=\"clear\"/></div>}\r\n                        {(props.weatherImgChoose === \"Snow\") && <div><img src={snowy} alt=\"snowy\"/></div>}\r\n                        {(props.weatherImgChoose === \"Mist\") && <div><img src={clear} alt=\"clear\"/></div>}\r\n                        {(props.weatherImgChoose === \"Rain\") && <div><img src={rainy} alt=\"rain\"/></div>}\r\n                    </div>\r\n                    <div className={s.temp}>{Math.round(props.temp)} °C</div>\r\n                </div>\r\n                <div> {props.description} </div>\r\n                <div>Ощущается как: {Math.round(props.feels_like)} °C</div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InfoWeatherCard;","import React from 'react';\r\nimport classNames from \"classnames\";\r\nimport s from \"./WeekInfo.module.css\";\r\nimport Loader from \"../../Loader/Loader\";\r\nimport {Button} from \"antd\";\r\nimport InfoWeatherCard from \"./InfoWeatherCard/InfoWeatherCard\";\r\n\r\nconst WeekInfo = ({isFetching, setWeek, today, tomorrow, tomorrowTomorrow }) => {\r\n\r\n    return (\r\n        <div className={classNames({\r\n            [s.modalPreloader]: !!isFetching,\r\n            [s.modal]: !isFetching,\r\n        })} >\r\n            {!!isFetching && <Loader/>}\r\n            {!isFetching && <div>\r\n                <div className={s.btnCon}> <Button className={s.btn}  onClick={() => setWeek(false)} type=\"primary\"\r\n                                                   size={'large'}>\r\n                    Назад\r\n                </Button></div>\r\n\r\n                <div className={s.todayInfo}>\r\n                    <h1>Сегодня v4</h1>\r\n\r\n                    <div className={s.today}>\r\n                        {today.map(el => (\r\n                                <InfoWeatherCard\r\n                                    key={el.dt}\r\n                                    feels_like={el.main.feels_like}\r\n                                    temp={el.main.temp}\r\n                                    description={el.weather[0].description}\r\n                                    weatherImgChoose={el.weather[0].main}\r\n                                    time={new Date(el.dt_txt).getHours()} />\r\n                            )\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={s.todayInfo}>\r\n                    <h1>Завтра</h1>\r\n\r\n                    <div className={s.today}>\r\n                        {tomorrow.map(el => (\r\n                                <InfoWeatherCard\r\n                                    key={el.dt}\r\n                                    feels_like={el.main.feels_like}\r\n                                    temp={el.main.temp}\r\n                                    description={el.weather[0].description}\r\n                                    weatherImgChoose={el.weather[0].main}\r\n                                    time={new Date(el.dt_txt).getHours()} />\r\n                            )\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={s.todayInfo}>\r\n                    <h1>Послезавтра</h1>\r\n\r\n                    <div className={s.today}>\r\n                        {tomorrowTomorrow.map(el => (\r\n                                <InfoWeatherCard\r\n                                    key={el.dt}\r\n                                    feels_like={el.main.feels_like}\r\n                                    temp={el.main.temp}\r\n                                    description={el.weather[0].description}\r\n                                    weatherImgChoose={el.weather[0].main}\r\n                                    time={new Date(el.dt_txt).getHours()} />\r\n                            )\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WeekInfo;","import React from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\n\r\n\r\nimport {SetWeatherWeekThunk} from \"../../../Redux/reducers/ForecastWeekReducer\";\r\nimport WeekInfo from \"./WeekInfo\";\r\n\r\nclass WeekInfoContainer extends React.PureComponent {\r\n\r\n    componentDidMount() {\r\n        this.props.SetWeatherWeekThunk(this.props.name)\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        console.log('today', this.props.today)\r\n        console.log('tomorrow', this.props.tomorrow)\r\n\r\n        /*let today = [];\r\n        let arrWithoutToday = [];\r\n        let tomorrow = [];\r\n        let arrWithoutTodayAndTomorrow = [];\r\n        let tomorrowTomorrow = [];\r\n\r\n        this.props.weatherWeek.forEach(el => {\r\n            if (new Date(this.props.weatherWeek[0].dt_txt).getDate() === new Date(el.dt_txt).getDate()) {\r\n                today.push(el)\r\n            } else {\r\n                arrWithoutToday.push(el)\r\n            }\r\n        })\r\n            arrWithoutToday.forEach(el => {\r\n                if (new Date(arrWithoutToday[0].dt_txt).getDate() === new Date(el.dt_txt).getDate()) {\r\n                    tomorrow.push(el)\r\n                }\r\n                else {\r\n                    arrWithoutTodayAndTomorrow.push(el)\r\n                }\r\n            })\r\n        arrWithoutTodayAndTomorrow.forEach(el => {\r\n            if (new Date(arrWithoutTodayAndTomorrow[0].dt_txt).getDate() === new Date(el.dt_txt).getDate()) {\r\n                tomorrowTomorrow.push(el)\r\n            }\r\n        })\r\n        console.log('tomorrow', tomorrow)\r\n*/\r\n\r\n        return (\r\n            <div>\r\n                {ReactDOM.createPortal(\r\n                    <WeekInfo isFetching={this.props.isFetching}\r\n                              setWeek={this.props.setWeek}\r\n                              today={this.props.today}\r\n                              tomorrow={this.props.tomorrow}\r\n                              tomorrowTomorrow={this.props.tomorrowTomorrow}\r\n                              /*today={today} tomorrow={tomorrow}\r\n                              tomorrowTomorrow={tomorrowTomorrow}*/ />,\r\n                    document.getElementById('modalWeek')\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ( {\r\n    weatherWeek:state.ForecastWeekReducer.weatherWeek,\r\n    isFetching:state.ForecastWeekReducer.isFetching,\r\n    today:state.ForecastWeekReducer.today,\r\n    tomorrow: state.ForecastWeekReducer.tomorrow,\r\n    tomorrowTomorrow: state.ForecastWeekReducer.tomorrowTomorrow,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    SetWeatherWeekThunk,\r\n})(WeekInfoContainer);","import React, {useState} from 'react';\r\nimport {Button} from 'antd';\r\n\r\n\r\nimport MoreInfo from \"./MoreInfo/MoreInfo\";\r\nimport s from './ButtonComponent.module.css';\r\nimport WeekInfo from \"./WeekIfo/WeekInfoContainer.js\";\r\n\r\nfunction ButtonComponents(props) {\r\n\r\n\r\n    const [more, setMore] = useState(false)\r\n    const [week, setWeek] = useState(false)\r\n\r\n    return (\r\n        <div className={s.flex}>\r\n\r\n            <Button onClick={() => setWeek(true)} type=\"default\" size={'large'}>\r\n                Рассписание\r\n            </Button>\r\n\r\n\r\n            <Button className={s.btnleft} onClick={() => setMore(true)} type=\"primary\" size={'large'}>\r\n                Подробнее\r\n            </Button>\r\n            {!!more && <MoreInfo setMore={setMore} weather={props.weather} />}\r\n            {!!week && <WeekInfo name={props.weather.data.name}  setWeek={setWeek} />}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ButtonComponents;","import React from 'react';\r\n\r\nimport cloudy from './../../img/cloudy-day.svg';\r\nimport clear from './../../img/day.svg';\r\nimport snowy from './../../img/snowy.svg';\r\nimport rainy from './../../img/rainy.svg';\r\nimport s from './WeatherCity.module.css';\r\nimport ButtonComponents from \"../ButtonComponent/ButtonComponents\";\r\n\r\nconst WeatherCity = (props) => {\r\n    return (\r\n        <div >\r\n            <div className={s.city}>{props.weather.data.name}</div>\r\n            <div className={s.temp}>\r\n                {(props.weather.data.weather[0].main === \"Clouds\") && <div><img src={cloudy} alt=\"cloudy\"/></div>}\r\n                {(props.weather.data.weather[0].main === \"Clear\") && <div><img src={clear} alt=\"clear\"/></div>}\r\n                {(props.weather.data.weather[0].main === \"Snow\") && <div><img src={snowy} alt=\"snowy\"/></div>}\r\n                {(props.weather.data.weather[0].main === \"Mist\") && <div><img src={clear} alt=\"clear\"/></div>}\r\n                {(props.weather.data.weather[0].main === \"Rain\") && <div><img src={rainy} alt=\"rain\"/></div>}\r\n                <div className={s.temperatura}>{Math.round(props.weather.data.main.temp)} °C</div>\r\n            </div>\r\n            <div className={s.desc}>\r\n                <div>\r\n                    Ощущается как: {Math.round(props.weather.data.main.feels_like)}\r\n                </div>\r\n                <div className={s.description}>\r\n                    {props.weather.data.weather[0].description}\r\n                </div>\r\n            </div>\r\n\r\n            <ButtonComponents weather={props.weather} />\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WeatherCity;","import React from 'react';\r\nimport {\r\n    WarningOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport s from './ErrorMessage.module.css'\r\n\r\n\r\nconst ErrorMessage = ({error}) => {\r\n    return (\r\n        <div className={s.ErrorMessage}>\r\n            <div className={s.Icon}><WarningOutlined /></div>\r\n            <div>Произошла некоторая  ошибка! <span>Возможно вы ввели не коректный поисковой запрос</span></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ErrorMessage;","import React from 'react';\r\nimport InputCity from \"../InputCity/InputCity\";\r\nimport Preloader from \"../preloader/Preloader\";\r\nimport WeatherCity from \"../WeatherCity/WeatherCity\";\r\n\r\nimport s from './../../App.module.css';\r\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\r\n\r\nclass AppWithLoclStorage extends React.Component {\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.SetWeatherThunk(localStorage.getItem('weatherslavalobikov'))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={s.app}>\r\n                <div className={s.wrap}>\r\n\r\n\r\n                    <InputCity\r\n                        weather={this.props.weather}\r\n                        isFetching={this.props.isFetching}\r\n                        SetWeatherThunk={this.props.SetWeatherThunk}\r\n                    />\r\n                    {!!this.props.isFetching && <Preloader/>}\r\n                    {!!this.props.isError && <ErrorMessage />}\r\n\r\n\r\n\r\n                    {(this.props.weather.status === 200) && <WeatherCity weather={this.props.weather}/>\r\n                    }\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AppWithLoclStorage;","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\n\n\nimport s from './App.module.css'\nimport {SetWeatherThunk} from \"./Redux/reducers/ForecastReducer\";\nimport InputCity from \"./Components/InputCity/InputCity\";\nimport Preloader from \"./Components/preloader/Preloader\";\nimport WeatherCity from \"./Components/WeatherCity/WeatherCity\";\nimport AppWithLoclStorage from \"./Components/AppWithLocalStorage/AppWithLoclStorage\";\nimport ErrorMessage from \"./Components/ErrorMessage/ErrorMessage\";\n\n\nfunction AppContainer(props) {\n\n    if (!localStorage.getItem('weatherslavalobikov')) {\n        localStorage.setItem('weatherslavalobikov', '')\n    }\n    if (!!localStorage.getItem('weatherslavalobikov') && localStorage.getItem('weatherslavalobikov') !== '') {\n        return  (\n            <AppWithLoclStorage\n                weather={props.weather}\n                isFetching={props.isFetching}\n                SetWeatherThunk={props.SetWeatherThunk}\n                isError={props.isError}\n            />\n        )\n\n    }\n\n\n    console.log(props)\n    return (\n        <div className={s.app}>\n            <div className={s.wrap}>\n\n\n                <InputCity\n                    weather={props.weather}\n                    isFetching={props.isFetching}\n                    SetWeatherThunk={props.SetWeatherThunk}\n                />\n                {!!props.isFetching && <Preloader/>}\n\n                {!!props.isError && <ErrorMessage />}\n\n\n                {(props.weather.status === 200) && <WeatherCity weather={props.weather}/>\n                }\n\n\n            </div>\n\n        </div>\n    );\n}\n\nlet mapStateToProps = (state) => ( {\n    isFetching:state.ForecastReducer.isFetching,\n    isError:state.ForecastReducer.isError,\n    weather:state.ForecastReducer.weather,\n});\n\nexport default compose(\n    connect(mapStateToProps, {SetWeatherThunk}),\n    )(AppContainer);\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport ForecastReducer from \"./reducers/ForecastReducer\";\r\nimport ForecastWeekReducer from \"./reducers/ForecastWeekReducer\";\r\n\r\n\r\n\r\nlet reducers = combineReducers({\r\n    ForecastReducer,\r\n    ForecastWeekReducer,\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport store from './Redux/Redux'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n\n    </Provider>\n  ,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalPreloader\":\"WeekInfo_modalPreloader__23_Ay\",\"modal\":\"WeekInfo_modal__221wZ\",\"wrap\":\"WeekInfo_wrap__KOKUq\",\"today\":\"WeekInfo_today__3sDwT\",\"todayInfo\":\"WeekInfo_todayInfo__3dhGo\",\"btnCon\":\"WeekInfo_btnCon__3sEHX\",\"btn\":\"WeekInfo_btn__1zjuV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"MoreInfo_modal__2js55\",\"modalWindow\":\"MoreInfo_modalWindow__2g_9p\",\"flex\":\"MoreInfo_flex__3ZsZ4\",\"name\":\"MoreInfo_name__31CzZ\",\"center\":\"MoreInfo_center__1ed4T\",\"btn\":\"MoreInfo_btn__2v-dy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"App_wrap__1Ye3P\",\"app\":\"App_app__2muJh\",\"dima\":\"App_dima__1Qo4z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"city\":\"WeatherCity_city__VdtRL\",\"temp\":\"WeatherCity_temp__1w0n1\",\"temperatura\":\"WeatherCity_temperatura__24Jz9\",\"desc\":\"WeatherCity_desc__2nOvY\",\"description\":\"WeatherCity_description__1JdhM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputik\":\"InputCity_inputik__fJuSP\",\"Input\":\"InputCity_Input__1KqBx\",\"search\":\"InputCity_search__2ne31\",\"city\":\"InputCity_city__297Tk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"InfoWeatherCard_container__eZW04\",\"center\":\"InfoWeatherCard_center__1-G7F\",\"weatherImgAndTemp\":\"InfoWeatherCard_weatherImgAndTemp__12YWA\",\"temp\":\"InfoWeatherCard_temp__3oj5q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flex\":\"ButtonComponent_flex__2KBJb\",\"btnleft\":\"ButtonComponent_btnleft__1aeu_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Loader_wrapper__1jRXa\",\"lds_ellipsis\":\"Loader_lds_ellipsis__2t86o\",\"lds-ellipsis1\":\"Loader_lds-ellipsis1__3-p7a\",\"lds-ellipsis2\":\"Loader_lds-ellipsis2__2e-Ef\",\"lds-ellipsis3\":\"Loader_lds-ellipsis3__ZgF5P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ErrorMessage\":\"ErrorMessage_ErrorMessage__2gnFV\",\"Icon\":\"ErrorMessage_Icon__1Lo3i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__wxDg6\"};"],"sourceRoot":""}